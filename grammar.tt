grammar Schedule
  rule commands
    (out_of_office / delete_rule / list) {
      def list?; !!(defined?(super) && super); end
      def delete?; !!(defined?(super) && super); end
    }
  end

  rule list
    'list' search:(' ' (user:('@' query:[a-z0-9]+) / channel:('#' query:[a-z0-9-]+)))? {
      def list?; true; end
      def limited?; search.nonterminal?; end
      def query_by_user?; limited? && search.elements.last.respond_to?(:user); end
      def query_by_channel?; limited? && search.elements.last.respond_to?(:channel); end
      def user; query_by_user? && search.elements.last.user.query.text_value; end
      def channel; query_by_channel? && search.elements.last.channel.query.text_value; end
      def query; query_by_user? ? user : channel; end
    }
  end

  rule delete_rule
    'rm' ' ' out_of_office {
      def delete?; true; end
      def type; out_of_office.type; end
      def details; out_of_office.details; end
    }
  end

  rule out_of_office
    type:('wfh' / 'out') ' ' details {
      def type; super.text_value; end
    }
  end

  rule details
    (date_range / date) (' ' note)? <CommandDetails>
  end

  rule date_range
    start_date:date ' '? '-' ' '? end_date:date
  end

  rule date
    digit 1..2 '/' digit 1..2 ('/' year:digit 4..4)? <DateLiteral>
  end

  rule note
    .+
  end

  rule digit
    [0-9]
  end

end
